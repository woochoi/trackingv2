services:
  mongo1:
    image: mongo
    container_name: mongo1
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-cluster
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongo2:
    image: mongo
    container_name: mongo2
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo-cluster
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongo3:
    image: mongo
    container_name: mongo3
    ports:
      - 27019:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo-cluster
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongoinit:
    image: mongo
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-cluster
    entrypoint: >
      bash -c "sleep 10 &&
      mongo --host mongo1:27017 --eval '
        rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"mongo1:27017\" },
            { _id: 1, host: \"mongo2:27017\" },
            { _id: 2, host: \"mongo3:27017\" }
          ]
        })'"

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  mongo-cluster:
    driver: bridge