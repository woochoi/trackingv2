services:
  mongo1:
    image: mongo
    container_name: mongo1
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-cluster

  mongo2:
    image: mongo
    container_name: mongo2
    restart: always
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo-cluster

  mongo3:
    image: mongo
    container_name: mongo3
    restart: always
    ports:
      - 27019:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo-cluster

  mongosetup:
    image: mongo
    container_name: mongo-setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: [ "bash", "-c" ]
    command: >
      "
      sleep 10;
      echo 'rs.initiate({
        _id: \"rs0\",
        members: [
          { _id: 0, host: \"mongo1:27017\" },
          { _id: 1, host: \"mongo2:27017\" },
          { _id: 2, host: \"mongo3:27017\" }
        ]
      })' | mongo --username admin --password 1234 --authenticationDatabase admin --host mongo1:27017;
      "
    networks:
      - mongo-cluster

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  mongo-cluster:
